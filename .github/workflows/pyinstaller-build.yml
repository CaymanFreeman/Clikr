name: PyInstaller Build

on:
  workflow_call:
    outputs:
      windows_version:
        value: Windows ${{ jobs.pyinstaller-windows.outputs.version_major}} (${{jobs.pyinstaller-windows.outputs.version }})
      ubuntu_version:
        value: ${{ jobs.pyinstaller-ubuntu.outputs.version }}

permissions:
  contents: read

jobs:
  pyinstaller-ubuntu:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    strategy:
      matrix:
        python-version: [ 3.12 ]
    steps:
      - uses: actions/checkout@v4

      - name: Get Version
        id: get-version
        run: |
          version=$(lsb_release -ds)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set Up Environment
        run: |
          python -m venv .venv
          .venv/bin/activate

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./requirements.txt
          pip install pyinstaller

      - name: PyInstaller Build
        run: |
          sudo chmod +x .github/workflows/scripts/ubuntu/pyinstaller.sh
          .github/workflows/scripts/ubuntu/pyinstaller.sh

      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-build
          path: dist/easyautoclicker
          if-no-files-found: error
          retention-days: 1

  pyinstaller-windows:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      version_major: ${{ steps.get-version.outputs.version_major }}
    strategy:
      matrix:
        python-version: [3.12]
    steps:
      - uses: actions/checkout@v4

      - name: Get Version
        id: get-version
        shell: pwsh
        run: |
          $ver = (Get-WmiObject Win32_OperatingSystem).Version
          $verMajor = if ([Environment]::OSVersion.Version.Major -eq 10) {
              if ([Environment]::OSVersion.Version.Build -ge 22000) { "11" } else { "10" }
          } else { "10" }
          "version=$ver" >> $env:GITHUB_OUTPUT
          "version_major=$verMajor" >> $env:GITHUB_OUTPUT

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set Up Environment
        run: |
          python -m venv .venv
          .venv\Scripts\activate.bat

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./requirements.txt
          pip install pyinstaller

      - name: PyInstaller Build
        run: |
          .github\workflows\scripts\windows\pyinstaller.bat

      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist\EasyAutoClicker.exe
          if-no-files-found: error
          retention-days: 1