name: Build for Windows

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    outputs:
      os_version:
        description: "Windows OS Version"
        value: ${{ jobs.build.outputs.os_version }}
      os_name:
        description: "Windows OS Name"
        value: ${{ jobs.build.outputs.os_name }}

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    outputs:
      os_version: ${{ steps.windows-version.outputs.os_version }}
      os_name: ${{ steps.windows-version.outputs.os_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Create Requirements File
        run: |
          @"
          customtkinter
          keyboard
          mouse
          pyautogui
          "@ | Set-Content requirements.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Get CTk Path
        id: get-customtkinter-path
        run: |
          $ctk_path = pip show customtkinter | Select-String -Pattern "Location: (.*)" | ForEach-Object { $_.Matches.Groups[1].Value }
          echo "CTK_PATH=$ctk_path" >> $env:GITHUB_ENV

      - name: Get Windows Version
        id: windows-version
        shell: pwsh
        run: |
          $windowsVersion = (Get-WmiObject Win32_OperatingSystem).Version
          $windowsName = if ([Environment]::OSVersion.Version.Major -eq 10) {
              if ([Environment]::OSVersion.Version.Build -ge 22000) { "11" } else { "10" }
          } else { "10" }
          "os_version=$windowsVersion" >> $env:GITHUB_OUTPUT
          "os_name=$windowsName" >> $env:GITHUB_OUTPUT

      - name: Build With PyInstaller
        run: |
          pyinstaller --noconfirm --name "EasyAutoClicker" --icon="assets\icon.ico" --onedir --windowed `
          --add-data "${{ env.CTK_PATH }}\customtkinter;customtkinter" `
          app.py

      - name: Copy Assets
        run: xcopy "assets" "dist\EasyAutoClicker\assets\" /E /I /Y

      - name: Create Windows Archive
        run: |
          cd dist\EasyAutoClicker
          Compress-Archive -Path * -DestinationPath "..\..\EasyAutoClicker-${{ inputs.version }}-Win-x64.zip"

      - name: Create Installer Directory
        run: mkdir installer

      - name: Convert LICENSE.md to LICENSE.txt
        run: |
          Get-Content "LICENSE.md" | Set-Content "LICENSE.txt"

      - name: Create Inno Setup Script
        run: |
          $template = Get-Content -Path ".github/workflows/installer.iss" -Raw
          $script = $template -replace "@VERSION@", "${{ inputs.version }}"
          $script | Set-Content -Path "setup.iss"

      - name: Create Windows Installer
        run: |
          choco install innosetup -y
          iscc "setup.iss"

      - name: Upload Windows Archive
        uses: actions/upload-artifact@v4
        with:
          name: windows-archive
          path: EasyAutoClicker-${{ inputs.version }}-Win-x64.zip
          retention-days: 5

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: installer/EasyAutoClicker-Setup-x64.exe
          retention-days: 5